{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x18Afca9D6b055ba2D47565F451720C417fC02569",
      "txHash": "0x84fcd1bcbadae80269657f693f7e462c43b67d1b388357d7d39aa7265c475df1",
      "kind": "transparent"
    },
    {
      "address": "0xC0ba25570F4cB592e83FF5f052cC9DD69D5b3caE",
      "txHash": "0x08ae98cb402fce58eb8a0e82c412a958ab2aaa5a92c5133646a31fcae20e6818",
      "kind": "transparent"
    },
    {
      "address": "0x62966fd253C2c3507A305f296E54cabD74AEA083",
      "txHash": "0x297f819777c15d9ec4c3dc6bead7bd62d27058e9ca44352fb7b3f24b55115764",
      "kind": "transparent"
    },
    {
      "address": "0xe17B125b85AbCC0Ff212cf33d06d928d4736aA04",
      "txHash": "0x2b8bc6c32b145c59f4783a6f6edb5dbc8c085d69f1f2252c03fb58969a791b8d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ad63054171fa9ad4ae222339eb3977660402e795ce8c5c142c97ff0182d65cb0": {
      "address": "0xd5AC3a9fAEdb7B7124790aF7E366b532F1c4AE47",
      "txHash": "0x092083f3f7b59bca20a36922e3680e79675cddddf4dd7771beeb2b73019c04c3",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_depositedTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AmicaToken",
            "src": "contracts/AmicaToken.sol:17"
          },
          {
            "label": "tokenIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AmicaToken",
            "src": "contracts/AmicaToken.sol:18"
          },
          {
            "label": "depositedBalances",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AmicaToken",
            "src": "contracts/AmicaToken.sol:19"
          },
          {
            "label": "bridgeWrapper",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "AmicaToken",
            "src": "contracts/AmicaToken.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AmicaToken",
            "src": "contracts/AmicaToken.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)159_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)786_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "474e7b9b3f7fb287377877d1050a5333ccb2ccebab1c87c2bedc4a76bdfdb955": {
      "address": "0x766246eB22f975782d6223A2379d0A04149C556d",
      "txHash": "0xf02abcec508897ab75553af7c0e18d3ceb7aa005d3024a458749b0c037557d4d",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_depositedTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AmicaToken",
            "src": "contracts/AmicaToken.sol:57"
          },
          {
            "label": "tokenIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AmicaToken",
            "src": "contracts/AmicaToken.sol:61"
          },
          {
            "label": "depositedBalances",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AmicaToken",
            "src": "contracts/AmicaToken.sol:65"
          },
          {
            "label": "bridgeWrapper",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "AmicaToken",
            "src": "contracts/AmicaToken.sol:69"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AmicaToken",
            "src": "contracts/AmicaToken.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)159_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)722_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)786_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3ee13f826d7b363bb120a3f4288f7eca1d35ce32dac900e8e66a908e4046b427": {
      "address": "0x5B6aB4aa3139029Aa7D2b5B5E5318422979fD7B6",
      "txHash": "0xb04d3c6f763b91d4e296e6661eeb4d0395ca05a90d939a90f98745048dc17f53",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "amicaToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)2531",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:374"
          },
          {
            "label": "uniswapFactory",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IUniswapV2Factory)7951",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:380"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IUniswapV2Router02)8347",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:386"
          },
          {
            "label": "erc20Implementation",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:392"
          },
          {
            "label": "_currentTokenId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:398"
          },
          {
            "label": "personas",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(PersonaData)8558_storage)",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:404"
          },
          {
            "label": "purchases",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(TokenPurchase)8572_storage)",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:410"
          },
          {
            "label": "userPurchases",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:416"
          },
          {
            "label": "agentDeposits",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:422"
          },
          {
            "label": "stakingRewards",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:428"
          },
          {
            "label": "pairingConfigs",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_struct(PairingConfig)8566_storage)",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:434"
          },
          {
            "label": "tradingFeeConfig",
            "offset": 0,
            "slot": "11",
            "type": "t_struct(TradingFeeConfig)8578_storage",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:440"
          },
          {
            "label": "feeReductionConfig",
            "offset": 0,
            "slot": "13",
            "type": "t_struct(FeeReductionConfig)8588_storage",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:446"
          },
          {
            "label": "userSnapshots",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_struct(UserSnapshot)8598_storage)",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:452"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "18",
            "type": "t_array(t_uint256)50_storage",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:455"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)496_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)560_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2531": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Factory)7951": {
            "label": "contract IUniswapV2Factory",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)8347": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PairingConfig)8566_storage)": {
            "label": "mapping(address => struct PersonaTokenFactory.PairingConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserSnapshot)8598_storage)": {
            "label": "mapping(address => struct PersonaTokenFactory.UserSnapshot)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PersonaData)8558_storage)": {
            "label": "mapping(uint256 => struct PersonaTokenFactory.PersonaData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenPurchase)8572_storage)": {
            "label": "mapping(uint256 => struct PersonaTokenFactory.TokenPurchase)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(FeeReductionConfig)8588_storage": {
            "label": "struct PersonaTokenFactory.FeeReductionConfig",
            "members": [
              {
                "label": "minAmicaForReduction",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxAmicaForReduction",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minReductionMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxReductionMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PairingConfig)8566_storage": {
            "label": "struct PersonaTokenFactory.PairingConfig",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mintCost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "graduationThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PersonaData)8558_storage": {
            "label": "struct PersonaTokenFactory.PersonaData",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pairToken",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "agentToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "pairCreated",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalAgentDeposited",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "minAgentTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "metadata",
                "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(TokenPurchase)8572_storage": {
            "label": "struct PersonaTokenFactory.TokenPurchase",
            "members": [
              {
                "label": "totalDeposited",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TradingFeeConfig)8578_storage": {
            "label": "struct PersonaTokenFactory.TradingFeeConfig",
            "members": [
              {
                "label": "feePercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "creatorShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserSnapshot)8598_storage": {
            "label": "struct PersonaTokenFactory.UserSnapshot",
            "members": [
              {
                "label": "currentBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "currentBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "pendingBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pendingBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e9b3b0a5b70158f2bdcb789cf81ba317b4f8f9fac7b353e6171c580075b9ab56": {
      "address": "0x9f12b81Cec37bdA3D5863376Bd0C99dA51FfCd8A",
      "txHash": "0xde313f822aa5d6731bd875f3f255729a9f7e6e472442481c42f112aceada924c",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "bridgedAmicaToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3963",
            "contract": "AmicaBridgeWrapper",
            "src": "contracts/AmicaBridgeWrapper.sol:69"
          },
          {
            "label": "nativeAmicaToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IAmicaToken)10399",
            "contract": "AmicaBridgeWrapper",
            "src": "contracts/AmicaBridgeWrapper.sol:72"
          },
          {
            "label": "totalBridgedIn",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "AmicaBridgeWrapper",
            "src": "contracts/AmicaBridgeWrapper.sol:75"
          },
          {
            "label": "totalBridgedOut",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "AmicaBridgeWrapper",
            "src": "contracts/AmicaBridgeWrapper.sol:78"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AmicaBridgeWrapper",
            "src": "contracts/AmicaBridgeWrapper.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)722_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)786_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IAmicaToken)10399": {
            "label": "contract IAmicaToken",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)3963": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "cfb808cf71f319616f85555676e069471b8e400bed77c5040160cf40f5c27e1d": {
      "address": "0x029E4F0e3e6270362Fc03A71a34948fF7bfAA467",
      "txHash": "0x66bcc05e13c851688f5542fada63e69d433d2197173c156d1a81275b07416723",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "amicaToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)2531",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:134"
          },
          {
            "label": "uniswapFactory",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IUniswapV2Factory)7951",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:135"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IUniswapV2Router02)8347",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:136"
          },
          {
            "label": "erc20Implementation",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:137"
          },
          {
            "label": "_currentTokenId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:139"
          },
          {
            "label": "personas",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(PersonaData)9688_storage)",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:141"
          },
          {
            "label": "purchases",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(TokenPurchase)9700_storage)",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:142"
          },
          {
            "label": "userPurchases",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:143"
          },
          {
            "label": "agentDeposits",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:144"
          },
          {
            "label": "stakingRewards",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:146"
          },
          {
            "label": "pairingConfigs",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_struct(PairingConfig)9695_storage)",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:148"
          },
          {
            "label": "tradingFeeConfig",
            "offset": 0,
            "slot": "11",
            "type": "t_struct(TradingFeeConfig)9705_storage",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:149"
          },
          {
            "label": "feeReductionConfig",
            "offset": 0,
            "slot": "13",
            "type": "t_struct(FeeReductionConfig)9714_storage",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:150"
          },
          {
            "label": "userSnapshots",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_struct(UserSnapshot)9723_storage)",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:151"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "18",
            "type": "t_array(t_uint256)50_storage",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:153"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)496_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)560_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2531": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Factory)7951": {
            "label": "contract IUniswapV2Factory",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)8347": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PairingConfig)9695_storage)": {
            "label": "mapping(address => struct PersonaTokenFactory.PairingConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserSnapshot)9723_storage)": {
            "label": "mapping(address => struct PersonaTokenFactory.UserSnapshot)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PersonaData)9688_storage)": {
            "label": "mapping(uint256 => struct PersonaTokenFactory.PersonaData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenPurchase)9700_storage)": {
            "label": "mapping(uint256 => struct PersonaTokenFactory.TokenPurchase)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(FeeReductionConfig)9714_storage": {
            "label": "struct PersonaTokenFactory.FeeReductionConfig",
            "members": [
              {
                "label": "minAmicaForReduction",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxAmicaForReduction",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minReductionMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxReductionMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PairingConfig)9695_storage": {
            "label": "struct PersonaTokenFactory.PairingConfig",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mintCost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "graduationThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PersonaData)9688_storage": {
            "label": "struct PersonaTokenFactory.PersonaData",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pairToken",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "agentToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "pairCreated",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalAgentDeposited",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "minAgentTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "metadata",
                "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(TokenPurchase)9700_storage": {
            "label": "struct PersonaTokenFactory.TokenPurchase",
            "members": [
              {
                "label": "totalDeposited",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TradingFeeConfig)9705_storage": {
            "label": "struct PersonaTokenFactory.TradingFeeConfig",
            "members": [
              {
                "label": "feePercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "creatorShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserSnapshot)9723_storage": {
            "label": "struct PersonaTokenFactory.UserSnapshot",
            "members": [
              {
                "label": "currentBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "currentBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "pendingBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pendingBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3b90f8958d37064a12fe9aef616ed9934e2e9d9babeea04e49255e8429009be5": {
      "address": "0x67e931140527A3747eBfD691C0F752ea9C281f4B",
      "txHash": "0x86673c4bbe728f105705d1011d3b60c5c8d0b874ee83e947b26798083aa304d0",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "amicaToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)2531",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:190"
          },
          {
            "label": "uniswapFactory",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IUniswapV2Factory)7951",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:193"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IUniswapV2Router02)8347",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:196"
          },
          {
            "label": "erc20Implementation",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:199"
          },
          {
            "label": "_currentTokenId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:202"
          },
          {
            "label": "personas",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(PersonaData)10097_storage)",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:205"
          },
          {
            "label": "purchases",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(TokenPurchase)10111_storage)",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:208"
          },
          {
            "label": "userPurchases",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:211"
          },
          {
            "label": "agentDeposits",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:214"
          },
          {
            "label": "stakingRewards",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:217"
          },
          {
            "label": "pairingConfigs",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_struct(PairingConfig)10105_storage)",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:220"
          },
          {
            "label": "tradingFeeConfig",
            "offset": 0,
            "slot": "11",
            "type": "t_struct(TradingFeeConfig)10117_storage",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:223"
          },
          {
            "label": "feeReductionConfig",
            "offset": 0,
            "slot": "13",
            "type": "t_struct(FeeReductionConfig)10127_storage",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:226"
          },
          {
            "label": "userSnapshots",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_struct(UserSnapshot)10137_storage)",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:229"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "18",
            "type": "t_array(t_uint256)50_storage",
            "contract": "PersonaTokenFactory",
            "src": "contracts/PersonaTokenFactory.sol:232"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)496_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)560_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2531": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Factory)7951": {
            "label": "contract IUniswapV2Factory",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)8347": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PairingConfig)10105_storage)": {
            "label": "mapping(address => struct PersonaTokenFactory.PairingConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserSnapshot)10137_storage)": {
            "label": "mapping(address => struct PersonaTokenFactory.UserSnapshot)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PersonaData)10097_storage)": {
            "label": "mapping(uint256 => struct PersonaTokenFactory.PersonaData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenPurchase)10111_storage)": {
            "label": "mapping(uint256 => struct PersonaTokenFactory.TokenPurchase)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(FeeReductionConfig)10127_storage": {
            "label": "struct PersonaTokenFactory.FeeReductionConfig",
            "members": [
              {
                "label": "minAmicaForReduction",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxAmicaForReduction",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minReductionMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxReductionMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PairingConfig)10105_storage": {
            "label": "struct PersonaTokenFactory.PairingConfig",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mintCost",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "graduationThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PersonaData)10097_storage": {
            "label": "struct PersonaTokenFactory.PersonaData",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "erc20Token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pairToken",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "agentToken",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "pairCreated",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalAgentDeposited",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "minAgentTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "metadata",
                "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(TokenPurchase)10111_storage": {
            "label": "struct PersonaTokenFactory.TokenPurchase",
            "members": [
              {
                "label": "totalDeposited",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TradingFeeConfig)10117_storage": {
            "label": "struct PersonaTokenFactory.TradingFeeConfig",
            "members": [
              {
                "label": "feePercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "creatorShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserSnapshot)10137_storage": {
            "label": "struct PersonaTokenFactory.UserSnapshot",
            "members": [
              {
                "label": "currentBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "currentBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "pendingBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pendingBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
