name: Test Suite

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main, develop]
  schedule:
    # Run tests nightly at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint --if-present
        continue-on-error: true

      - name: Run tests
        run: npm test -- --coverage --maxWorkers=2
        env:
          CI: true

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Generate coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        run: |
          npm test -- --coverage --coverageReporters=text-summary
          echo "## Test Coverage" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          npm test -- --coverage --coverageReporters=text-summary 2>&1 | grep -A 20 "Coverage summary" >> $GITHUB_STEP_SUMMARY || true
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Check coverage threshold
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        run: |
          npm test -- --coverage --coverageThreshold='{"global":{"branches":80,"functions":80,"lines":80,"statements":80}}'
        continue-on-error: true

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - name: Test Summary
        uses: actions/github-script@v6
        with:
          script: |
            const status = '${{ needs.test.result }}';
            const emoji = status === 'success' ? '✅' : '❌';
            core.summary
              .addHeading(`${emoji} Test Results`)
              .addRaw(`Test suite ${status}`)
              .write();
